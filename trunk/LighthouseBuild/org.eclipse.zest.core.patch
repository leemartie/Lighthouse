Index: src/org/eclipse/zest/core/viewers/internal/AbstractStructuredGraphViewer.java
===================================================================
RCS file: /cvsroot/tools/org.eclipse.gef/plugins/org.eclipse.zest.core/src/org/eclipse/zest/core/viewers/internal/AbstractStructuredGraphViewer.java,v
retrieving revision 1.16
diff -u -r1.16 AbstractStructuredGraphViewer.java
--- src/org/eclipse/zest/core/viewers/internal/AbstractStructuredGraphViewer.java	4 May 2009 05:20:33 -0000	1.16
+++ src/org/eclipse/zest/core/viewers/internal/AbstractStructuredGraphViewer.java	27 May 2010 22:30:43 -0000
@@ -24,7 +24,10 @@
 import org.eclipse.swt.events.DisposeEvent;
 import org.eclipse.swt.widgets.Widget;
 import org.eclipse.zest.core.viewers.AbstractZoomableViewer;
+import org.eclipse.zest.core.viewers.EntityConnectionData;
+import org.eclipse.zest.core.viewers.IFigureProvider;
 import org.eclipse.zest.core.viewers.IGraphContentProvider;
+import org.eclipse.zest.core.viewers.IGraphEntityContentProvider;
 import org.eclipse.zest.core.widgets.CGraphNode;
 import org.eclipse.zest.core.widgets.ConstraintAdapter;
 import org.eclipse.zest.core.widgets.Graph;
@@ -651,7 +654,8 @@
 				getLayoutAlgorithm().removeRelationship(relationship.getLayoutRelationship());
 			}
 			// remove the relationship from the model
-			relationship.dispose();
+//			relationship.dispose();
+			removeGraphModelConnection(connection);
 		}
 	}
 
@@ -666,6 +670,14 @@
 			// create the new node
 			getFactory().createNode(getGraphControl(), element);
 
+			if (getLabelProvider() instanceof IFigureProvider) {
+				// create the new node with a custom figure
+				IFigureProvider figureProvider = (IFigureProvider) getLabelProvider();
+				getFactory().createNode(getGraphControl(), element, figureProvider.getFigure(element));
+			} else {
+				// create the new node
+				getFactory().createNode(getGraphControl(), element);
+			}
 		}
 	}
 
@@ -686,7 +698,8 @@
 				getLayoutAlgorithm().removeRelationships(node.getTargetConnections());
 			}
 			// remove the node and it's connections from the model
-			node.dispose();
+			//node.dispose();
+			removeGraphModelNode(element);
 		}
 	}
 
@@ -724,6 +737,9 @@
 				Object dest = content.getDestination(connection);
 				// create the new relationship
 				modelFactory.createConnection(getGraphControl(), connection, source, dest);
+			} else if (modelFactory.getContentProvider() instanceof IGraphEntityContentProvider) {
+				EntityConnectionData connData = (EntityConnectionData) connection;
+				modelFactory.createConnection(getGraphControl(), connData, connData.source, connData.dest);
 			} else {
 				throw new UnsupportedOperationException();
 			}
Index: src/org/eclipse/zest/core/viewers/internal/GraphModelEntityFactory.java
===================================================================
RCS file: /cvsroot/tools/org.eclipse.gef/plugins/org.eclipse.zest.core/src/org/eclipse/zest/core/viewers/internal/GraphModelEntityFactory.java,v
retrieving revision 1.8
diff -u -r1.8 GraphModelEntityFactory.java
--- src/org/eclipse/zest/core/viewers/internal/GraphModelEntityFactory.java	31 Mar 2009 16:39:23 -0000	1.8
+++ src/org/eclipse/zest/core/viewers/internal/GraphModelEntityFactory.java	27 May 2010 22:30:43 -0000
@@ -81,9 +81,9 @@
 			Object data = entities[i];
 
 			// If this element is filtered, continue to the next one.
-			if (filterElement(inputElement, data)) {
-				continue;
-			}
+//			if (filterElement(inputElement, data)) {
+//				continue;
+//			}
 			Object[] related = ((IGraphEntityContentProvider) getContentProvider()).getConnectedTo(data);
 
 			if (related != null) {
Index: src/org/eclipse/zest/core/viewers/internal/AbstractStylingModelFactory.java
===================================================================
RCS file: /cvsroot/tools/org.eclipse.gef/plugins/org.eclipse.zest.core/src/org/eclipse/zest/core/viewers/internal/AbstractStylingModelFactory.java,v
retrieving revision 1.14
diff -u -r1.14 AbstractStylingModelFactory.java
--- src/org/eclipse/zest/core/viewers/internal/AbstractStylingModelFactory.java	17 May 2010 05:24:29 -0000	1.14
+++ src/org/eclipse/zest/core/viewers/internal/AbstractStylingModelFactory.java	27 May 2010 22:30:43 -0000
@@ -43,6 +43,7 @@
 	private int connectionStyle;
 	private int nodeStyle;
 	private List /* ConstraintAdapater */constraintAdapters = new ArrayList();
+	private HashMap nodesLocationMap = new HashMap();
 
 	/**
 	 * 
@@ -302,20 +303,20 @@
 		// rebuild the whole thing.
 
 		Map oldMap = viewer.getNodesMap();
-		HashMap nodesMap = new HashMap();
+//		HashMap nodesMap = new HashMap();
 		// have to copy the Map data accross so that it doesn't get overwritten
 		for (Iterator keys = oldMap.keySet().iterator(); keys.hasNext();) {
 			Object key = keys.next();
-			nodesMap.put(key, oldMap.get(key));
+			nodesLocationMap.put(key, oldMap.get(key));
 		}
 		clearGraph(graph);
 		doBuildGraph(graph);
 		// update the positions on the new nodes to match the old ones.
 		GraphNode[] nodes = getNodesArray(graph);
 		// save a little time, go with the smallest list as the primary list
-		if (nodes.length < nodesMap.keySet().size()) {
+		if (nodes.length < nodesLocationMap.keySet().size()) {
 			for (int i = 0; i < nodes.length; i++) {
-				GraphNode oldNode = (GraphNode) nodesMap.get(nodes[i].getData());
+				GraphNode oldNode = (GraphNode) nodesLocationMap.get(nodes[i].getData());
 				if (oldNode != null) {
 					nodes[i].setLocation(oldNode.getLocation().x, oldNode.getLocation().y);
 					if (oldNode.isSizeFixed()) {
@@ -324,11 +325,11 @@
 				}
 			}
 		} else {
-			for (Iterator i = nodesMap.keySet().iterator(); i.hasNext();) {
+			for (Iterator i = nodesLocationMap.keySet().iterator(); i.hasNext();) {
 				Object key = i.next();
 				GraphNode node = viewer.getGraphModelNode(key);
 				if (node != null) {
-					GraphNode oldNode = (GraphNode) nodesMap.get(key);
+					GraphNode oldNode = (GraphNode) nodesLocationMap.get(key);
 					node.setLocation(oldNode.getLocation().x, oldNode.getLocation().y);
 					if (oldNode.isSizeFixed()) {
 						node.setSize(oldNode.getSize().width, oldNode.getSize().height);
Index: src/org/eclipse/zest/core/viewers/internal/IStylingGraphModelFactory.java
===================================================================
RCS file: /cvsroot/tools/org.eclipse.gef/plugins/org.eclipse.zest.core/src/org/eclipse/zest/core/viewers/internal/IStylingGraphModelFactory.java,v
retrieving revision 1.7
diff -u -r1.7 IStylingGraphModelFactory.java
--- src/org/eclipse/zest/core/viewers/internal/IStylingGraphModelFactory.java	19 May 2010 20:10:20 -0000	1.7
+++ src/org/eclipse/zest/core/viewers/internal/IStylingGraphModelFactory.java	27 May 2010 22:30:43 -0000
@@ -9,6 +9,7 @@
  *******************************************************************************/
 package org.eclipse.zest.core.viewers.internal;
 
+import org.eclipse.draw2d.IFigure;
 import org.eclipse.jface.viewers.IBaseLabelProvider;
 import org.eclipse.jface.viewers.IStructuredContentProvider;
 import org.eclipse.jface.viewers.StructuredViewer;
@@ -72,6 +73,8 @@
 	 */
 	public GraphNode createNode(Graph graph, Object element);
 
+	public GraphNode createNode(Graph graph, Object element, IFigure figure);
+
 	/**
 	 * Creates and returns a connection with the given source and destination
 	 * objects from the user model. If the source and destination nodes don't
Index: src/org/eclipse/zest/core/viewers/internal/GraphModelFactory.java
===================================================================
RCS file: /cvsroot/tools/org.eclipse.gef/plugins/org.eclipse.zest.core/src/org/eclipse/zest/core/viewers/internal/GraphModelFactory.java,v
retrieving revision 1.7
diff -u -r1.7 GraphModelFactory.java
--- src/org/eclipse/zest/core/viewers/internal/GraphModelFactory.java	15 Mar 2010 04:36:50 -0000	1.7
+++ src/org/eclipse/zest/core/viewers/internal/GraphModelFactory.java	27 May 2010 22:30:43 -0000
@@ -83,7 +83,7 @@
 					// just create the node for the source
 					if (source != null) {
 						if (figureProvider != null) {
-							createNode(model, source, figureProvider.getFigure(dest));
+							createNode(model, source, figureProvider.getFigure(source));
 						} else {
 							createNode(model, source);
 						}
